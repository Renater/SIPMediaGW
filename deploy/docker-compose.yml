volumes:
  kamailio_db:
  hep_db:

services:
  sip_server:
    image: kamailio4sipmediagw
    build:
      context: kamailio
    container_name: kamailio
    network_mode: host
    logging:
      driver: syslog
      options:
        tag: "kamailio"
    env_file:
      - .env_kamailio
      - ./kamailio/config/.env_cred
      - .env_mysql
    depends_on:
      sip_db:
        condition: service_healthy
    entrypoint:
      - "/bin/sh"
      - "-c"
      - "printenv > /etc/environment &&
         cron && kamailioRun"

  sip_db:
    image: mysql
    container_name: kamailioDB
    volumes:
      - kamailio_db:/var/lib/mysql
      - ./kamailio/db_healthcheck.sh:/usr/local/bin/db_healtcheck
    networks:
      - default
    ports:
      - "3306:3306"
    logging:
      driver: syslog
      options:
        tag: "kamailioDB"
    env_file:
      - .env_mysql
    healthcheck:
      test: "db_healtcheck"
      interval: 5s
      timeout: 5s
      retries: 5

  hep_db:
    image: timescale/timescaledb:latest-pg15
    container_name: postgres
    restart: unless-stopped
    volumes:
      - hep_db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    logging:
      driver: syslog
      options:
        tag: "postgres"
    env_file:
      - .env_postgres
    healthcheck:
      test: ["CMD-SHELL", "psql -h 'localhost' -U 'root' -c '\\l'"]
      interval: 5s
      timeout: 5s
      retries: 5

  heplify_server:
    image: sipcapture/heplify-server
    container_name: heplify-server
    restart: unless-stopped
    ports:
      - "9060:9060"
      - "9060:9060/udp"
      - "9061:9061/tcp"
      - "9876:9876"
    logging:
      driver: syslog
      options:
        tag: "heplify-server"
    env_file:
      - .env_postgres
      - .env_hep
    command:
      - './heplify-server'
    depends_on:
      hep_db:
        condition: service_healthy

  homer_webapp:
    image: sipcapture/webapp
    container_name: homer-webapp
    restart: unless-stopped
    ports:
      - "8080:80"
    logging:
      driver: syslog
      options:
        tag: "heplify-server"
    env_file:
      - .env_postgres
      - .env_homer
    depends_on:
      hep_db:
        condition: service_healthy

  scaler:
    image: scaler4sipmediagw
    restart: "unless-stopped"
    build:
      context: scaler
    container_name: scaler
    volumes:
      - ./scaler/config:/var/config
      - ./scaler/outscale/config:/var/outscale/config
    network_mode: host
    logging:
      driver: syslog
      options:
        tag: "scaler"
    depends_on:
      sip_db:
        condition: service_healthy
    environment:
      TZ: "Europe/Paris" # Time Zone
      SCALER_CONFIG_FILE: "scaler.json"
      CSP_NAME: "outscale"
      CSP_CONFIG_FILE: "sipmediagw_staging.json"
      CSP_PROFILE: "visio-dev"
    entrypoint:
      - "/bin/sh"
      - "-c"
      - "python webService.py &
         /var/scale.sh"

  turn_server:
    image: coturn4sipmediagw
    build:
      context: coturn
    container_name: coturn
    network_mode: host
    logging:
      driver: syslog
      options:
        tag: "coturn"
    env_file:
      - .env_turn
      - ./coturn/.env_cred
    entrypoint:
      - "/bin/sh"
      - "-c"
      - "heplify.sh &
         coturnRun"

